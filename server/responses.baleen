
setup 9
	serverInstanceUid string 1
	connectionId string 2//used for reconnecting by the client

confirmReconnect 16
	manyClientMessagesReceived int 1

reconnectExpired 17

newSyncId 8
	requestId int 1
	syncId int 2

//indicates that a sync handle has been created, and instructs the handle to wait for updates
//note that 'ready' (and 'open') responses refer to the sync handle, not the client<->server connection in a global sense
open 1
	requestId int 1
	
update 2
	editId int 1
	op byte 5
	edit binary 2
	destinationSyncId int 3

updateObject 11
	id int 1
	edits binary 2
	destinationSyncId int 3
	//syncId int 4

updateViewObject 14
	id string 1
	edits binary 2
	destinationSyncId int 3
	//syncId int 4
	
//comes after open (and possibly some updates), indicates that the sync handle is ready for use
ready 3
	requestId int 1
	//updatePacket string 2
gotSnapshots 4
	requestId int 1
	snapshotVersionIds binary 2//structure is 4-byte int series with 1 byte count prefix
	
gotAllSnapshots 5
	requestId int 1
	snapshots binary 2//structure is like gotSnapshot.snap, with each snap prefixed with a byte length

gotSnapshot 6
	requestId int 1
	snap binary 3 //structure is 4-byte latestVersionId, followed by update objects
	
//this is the response to a persistEdit request with op==='make'
//TODO generalize this for all temporaries as a temporary->id message?
objectMade 10
	requestId int 1
	id int 2
	temporary int 3
	destinationSyncId int 4

reifyObject 15
	id int 1
	temporary int 2
	destinationSyncId int 3
/*	
gotVersionTimestamps 12
	requestId int 1
	timestamps binary 2
	destinationSyncId int 4
	*/
requestError 13
	err string 1
	requestId int 2
	code string 3

increaseAck 12
	frameCount int 1
