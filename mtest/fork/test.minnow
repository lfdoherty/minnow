
entity 1
	name string 1 optional
	reallyAFork boolean 2

container 2
	objs set:entity 1

general() 100
	e one(subset(*entity,{~.reallyAFork})) 1
	other one(subset(*entity,{not(~.reallyAFork)})) 2

empty() 101

forkQuery() 102
	e one(subset(*entity,{and(~.reallyAFork,eq('original', ~.name))})) 1

forkQueryTwo() 103
	e one(subset(*entity,{and(~.reallyAFork,eq('purpled', ~.name))})) 1

isForked(){
	subset(*entity,{~.reallyAFork})
}
purpled(){
	one(subset(*entity,{eq('purpled', ~.name)}))
}

/*
madePreforked(){
	each(isForked(),{preforked(~,purpled())})
}*/

forkQueryPreforked() 105
	e mutate(1, {preforked(switch(eq(type(~),'entity'), 
				case(true,
					switch(entity:~.reallyAFork,
						case(true, purpled()),
						default(nil)
					)
				),
				default(nil)
		))}, 
		{one(subset(isForked(),{eq('purpled', ~.name)}))}) 6
	p purpled() 2
	isf isForked() 3
	//mp madePreforked() 4

